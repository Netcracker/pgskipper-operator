# Copyright 2024-2025 NetCracker Technology Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

postgresUser: postgres
postgresPassword: "p@ssWOrD1"

##  This section describes values for patroni-services deployment
operator:
  # Resource limits for patroni-services-operator pod
  resources:
    limits:
      cpu: 50m
      memory: 50Mi
    requests:
      cpu: 50m
      memory: 50Mi

##  This section describes values for metricCollector deployment
metricCollector:
  # Optional flag for Monitoring Agent deployment
  install: true
  prometheusRules:
    # Threshold for backup storage size for alerting
    backupAlertThreshold: 5
    # Threshold for backup storage size for warning
    backupWarningThreshold: 20
    # Alert delay to decrease false positive cases
    alertDelay: 3m
    # Maximum possible postgres backup age
    maxLastBackupAge: 86400
    # Postgres locks limit
    locksThreshold: 500
    # Postgres query execution time limit
    queryMaxTimeThreshold: 3600
  # Interval in seconds to execute Telegraf's plugins
  collectionInterval: 60
  # Timeout in seconds to execute Telegraf's plugins
  telegrafPluginTimeout: 60
  # Timeout in seconds for execution of oc exec calls
  ocExecTimeout: 10
  # Profile for the metrics collection. The possible values are prod and dev. The default value is prod.
  # For dev profile, additional performance metrics (queries stat, tables stat) will be collected.
  metricsProfile: prod
  prometheusMonitoring: false
  applyGrafanaDashboard: false

##  This section describes values for backupDaemon deployment
backupDaemon:
  # Optional flag for PostgreSQL Backup Daemon deployment
  install: true
  # If the flag is set as true, the installation procedure will configure Postgres to use the WAL archive and use the backup daemon as storage.
  # This setting can cause major disk usage impact, because each postgres WAL file size is 16MB.
  walArchiving: false
  # Schedule for backups in cron format.
  backupSchedule: "0 0/7 * * *"
  # The eviction policy for backup daemon: period and action. The default value is 7d/delete.
  evictionPolicy: "7d/delete"
  # this parameters are needed only in case when k8s PSP https://kubernetes.io/docs/concepts/policy/pod-security-policy/ enabled.
  securityContext:
    runAsUser: 1000
    fsGroup: 1000
  # Resource limits for PostgreSQL Backup Daemon Pod
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  # Storage section.
  storage:
    # Describes the storage type. The possible values are `pv`, `provisioned` and `ephemeral`.
    type: provisioned
    # Size of the PVC that will be create for each of Patroni Pod as mount for data files
    size: 1Gi
    # Parameter specifies the list of labels that is used to bind suitable
    # persistent volumes with the persistent volume claims
    #    selectors:
    #      - "key1=value1"
    #      - "key2=value2"
    storageClass: local-path
    # The names of all volumes to be used in this deployment. The number of lines must match the number of nodes.
    # storage.volumes can be used only if storage.type is set to PV
    #    volumes:
    #      - postgresql-backup-pv-1
    # The array of node-selectors that will be used for deployment.
    # storage.nodes can be used only if storage.type is set to PV
#    nodes:
#      - db-backup-node1
tests:
  install: true
  # One of "full", "basic"or one from testScenarios
  runTestScenarios: "basic"
  testScenarios:
    patroniSimple:
      - check_patroni_rest
    patroniBasic:
      - check_installation_patroni
    patroniFull:
      - check_installation_patroni
      - check_rest_api_auth
      - check_scale_down_replica
      - check_scale_down_master
      - check_delete_master
      - check_manual_switchover
    backupDaemonBasic:
      - check_installation_backup_daemon
    backupDaemonFull:
      - check_installation_backup_daemon
      - check_backup_api
      - check_backup__no_metric_in_last_backup
      - check_evict_api
      - check_granular_api
      - check_wal_archiving
